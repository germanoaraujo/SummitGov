apiVersion: v1
kind: Namespace
metadata:
  name: demo-policies
---
apiVersion: policy.mcm.ibm.com/v1alpha1
kind: Policy
metadata:
  name: default-networkpolicy
  namespace: demo-policies
  annotations:
    policy.mcm.ibm.com/standards: NIST-CSF
    policy.mcm.ibm.com/categories: PR.AC Identity Management Authentication and Access Control
    policy.mcm.ibm.com/controls: PR.IP-1 Baseline configuration, PR.AC-4 Access Control, PR.AC-5 Network Integrity
spec:
  complianceType: musthave
  remediationAction: enforce
  disabled: false
  namespaces:
    exclude: ["default", "kube-*", "ibm-*", "openshift-*"]
    include: ["demo-*"]
  object-templates:
    - complianceType: musthave
      objectDefinition:
        apiVersion: networking.k8s.io/v1
        kind: NetworkPolicy
        metadata:
          name: allow-from-openshift-ingress
        spec:
          ingress:
          - from:
            - namespaceSelector:
                matchLabels:
                  network.openshift.io/policy-group: ingress
          podSelector: {}
          policyTypes:
          - Ingress
    - complianceType: musthave
      objectDefinition:
        apiVersion: networking.k8s.io/v1
        kind: NetworkPolicy
        metadata:
          name: allow-from-openshift-monitoring
        spec:
          ingress:
          - from:
            - namespaceSelector:
                matchLabels:
                  network.openshift.io/policy-group: monitoring
          podSelector: {}
          policyTypes:
          - Ingress
---
apiVersion: mcm.ibm.com/v1alpha1
kind: PlacementBinding
metadata:
  name: binding-default-networkpolicy
  namespace: demo-policies
placementRef:
  name: placement-default-networkpolicy
  kind: PlacementRule
  apiGroup: apps.open-cluster-management.io
subjects:
- name: default-networkpolicy
  kind: Policy
  apiGroup: policy.mcm.ibm.com
---
apiVersion: apps.open-cluster-management.io/v1
kind: PlacementRule
metadata:
  name: placement-default-networkpolicy
  namespace: demo-policies
spec:
  clusterConditions:
  - type: OK
  clusterSelector:
    matchExpressions:
      - {key: vendor, operator: In, values: ["OpenShift"]}
